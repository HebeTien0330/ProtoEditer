// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        v4.24.0
// source: message.proto

package message

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MessageWrapper struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Payload:
	//
	//	*MessageWrapper_C2SGm
	//	*MessageWrapper_S2CGm
	//	*MessageWrapper_C2SHeartbeat
	//	*MessageWrapper_S2CHeartbeat
	//	*MessageWrapper_C2SQueryLeaderboard
	//	*MessageWrapper_S2CQueryLeaderboard
	//	*MessageWrapper_C2SQueryServerList
	//	*MessageWrapper_S2CQueryServerList
	//	*MessageWrapper_C2SLogin
	//	*MessageWrapper_S2CLogin
	//	*MessageWrapper_C2SQueryPlayerData
	//	*MessageWrapper_S2CQueryPlayerData
	//	*MessageWrapper_C2SQueryPlayerBasic
	//	*MessageWrapper_S2CQueryPlayerBasic
	Payload       isMessageWrapper_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageWrapper) Reset() {
	*x = MessageWrapper{}
	mi := &file_message_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageWrapper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageWrapper) ProtoMessage() {}

func (x *MessageWrapper) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageWrapper.ProtoReflect.Descriptor instead.
func (*MessageWrapper) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0}
}

func (x *MessageWrapper) GetPayload() isMessageWrapper_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *MessageWrapper) GetC2SGm() *C2SGm {
	if x != nil {
		if x, ok := x.Payload.(*MessageWrapper_C2SGm); ok {
			return x.C2SGm
		}
	}
	return nil
}

func (x *MessageWrapper) GetS2CGm() *S2CGm {
	if x != nil {
		if x, ok := x.Payload.(*MessageWrapper_S2CGm); ok {
			return x.S2CGm
		}
	}
	return nil
}

func (x *MessageWrapper) GetC2SHeartbeat() *C2SHeartbeat {
	if x != nil {
		if x, ok := x.Payload.(*MessageWrapper_C2SHeartbeat); ok {
			return x.C2SHeartbeat
		}
	}
	return nil
}

func (x *MessageWrapper) GetS2CHeartbeat() *S2CHeartbeat {
	if x != nil {
		if x, ok := x.Payload.(*MessageWrapper_S2CHeartbeat); ok {
			return x.S2CHeartbeat
		}
	}
	return nil
}

func (x *MessageWrapper) GetC2SQueryLeaderboard() *C2SQueryLeaderboard {
	if x != nil {
		if x, ok := x.Payload.(*MessageWrapper_C2SQueryLeaderboard); ok {
			return x.C2SQueryLeaderboard
		}
	}
	return nil
}

func (x *MessageWrapper) GetS2CQueryLeaderboard() *S2CQueryLeaderboard {
	if x != nil {
		if x, ok := x.Payload.(*MessageWrapper_S2CQueryLeaderboard); ok {
			return x.S2CQueryLeaderboard
		}
	}
	return nil
}

func (x *MessageWrapper) GetC2SQueryServerList() *C2SQueryServerList {
	if x != nil {
		if x, ok := x.Payload.(*MessageWrapper_C2SQueryServerList); ok {
			return x.C2SQueryServerList
		}
	}
	return nil
}

func (x *MessageWrapper) GetS2CQueryServerList() *S2CQueryServerList {
	if x != nil {
		if x, ok := x.Payload.(*MessageWrapper_S2CQueryServerList); ok {
			return x.S2CQueryServerList
		}
	}
	return nil
}

func (x *MessageWrapper) GetC2SLogin() *C2SLogin {
	if x != nil {
		if x, ok := x.Payload.(*MessageWrapper_C2SLogin); ok {
			return x.C2SLogin
		}
	}
	return nil
}

func (x *MessageWrapper) GetS2CLogin() *S2CLogin {
	if x != nil {
		if x, ok := x.Payload.(*MessageWrapper_S2CLogin); ok {
			return x.S2CLogin
		}
	}
	return nil
}

func (x *MessageWrapper) GetC2SQueryPlayerData() *C2SQueryPlayerData {
	if x != nil {
		if x, ok := x.Payload.(*MessageWrapper_C2SQueryPlayerData); ok {
			return x.C2SQueryPlayerData
		}
	}
	return nil
}

func (x *MessageWrapper) GetS2CQueryPlayerData() *S2CQueryPlayerData {
	if x != nil {
		if x, ok := x.Payload.(*MessageWrapper_S2CQueryPlayerData); ok {
			return x.S2CQueryPlayerData
		}
	}
	return nil
}

func (x *MessageWrapper) GetC2SQueryPlayerBasic() *C2SQueryPlayerBasic {
	if x != nil {
		if x, ok := x.Payload.(*MessageWrapper_C2SQueryPlayerBasic); ok {
			return x.C2SQueryPlayerBasic
		}
	}
	return nil
}

func (x *MessageWrapper) GetS2CQueryPlayerBasic() *S2CQueryPlayerBasic {
	if x != nil {
		if x, ok := x.Payload.(*MessageWrapper_S2CQueryPlayerBasic); ok {
			return x.S2CQueryPlayerBasic
		}
	}
	return nil
}

type isMessageWrapper_Payload interface {
	isMessageWrapper_Payload()
}

type MessageWrapper_C2SGm struct {
	C2SGm *C2SGm `protobuf:"bytes,1001,opt,name=c2s_gm,json=c2sGm,proto3,oneof"`
}

type MessageWrapper_S2CGm struct {
	S2CGm *S2CGm `protobuf:"bytes,1002,opt,name=s2c_gm,json=s2cGm,proto3,oneof"`
}

type MessageWrapper_C2SHeartbeat struct {
	C2SHeartbeat *C2SHeartbeat `protobuf:"bytes,1003,opt,name=c2s_heartbeat,json=c2sHeartbeat,proto3,oneof"`
}

type MessageWrapper_S2CHeartbeat struct {
	S2CHeartbeat *S2CHeartbeat `protobuf:"bytes,1004,opt,name=s2c_heartbeat,json=s2cHeartbeat,proto3,oneof"`
}

type MessageWrapper_C2SQueryLeaderboard struct {
	C2SQueryLeaderboard *C2SQueryLeaderboard `protobuf:"bytes,1005,opt,name=c2s_query_leaderboard,json=c2sQueryLeaderboard,proto3,oneof"`
}

type MessageWrapper_S2CQueryLeaderboard struct {
	S2CQueryLeaderboard *S2CQueryLeaderboard `protobuf:"bytes,1006,opt,name=s2c_query_leaderboard,json=s2cQueryLeaderboard,proto3,oneof"`
}

type MessageWrapper_C2SQueryServerList struct {
	C2SQueryServerList *C2SQueryServerList `protobuf:"bytes,1007,opt,name=c2s_query_server_list,json=c2sQueryServerList,proto3,oneof"`
}

type MessageWrapper_S2CQueryServerList struct {
	S2CQueryServerList *S2CQueryServerList `protobuf:"bytes,1008,opt,name=s2c_query_server_list,json=s2cQueryServerList,proto3,oneof"`
}

type MessageWrapper_C2SLogin struct {
	C2SLogin *C2SLogin `protobuf:"bytes,1009,opt,name=c2s_login,json=c2sLogin,proto3,oneof"`
}

type MessageWrapper_S2CLogin struct {
	S2CLogin *S2CLogin `protobuf:"bytes,1010,opt,name=s2c_login,json=s2cLogin,proto3,oneof"`
}

type MessageWrapper_C2SQueryPlayerData struct {
	C2SQueryPlayerData *C2SQueryPlayerData `protobuf:"bytes,1011,opt,name=c2s_query_player_data,json=c2sQueryPlayerData,proto3,oneof"`
}

type MessageWrapper_S2CQueryPlayerData struct {
	S2CQueryPlayerData *S2CQueryPlayerData `protobuf:"bytes,1012,opt,name=s2c_query_player_data,json=s2cQueryPlayerData,proto3,oneof"`
}

type MessageWrapper_C2SQueryPlayerBasic struct {
	C2SQueryPlayerBasic *C2SQueryPlayerBasic `protobuf:"bytes,1013,opt,name=c2s_query_player_basic,json=c2sQueryPlayerBasic,proto3,oneof"`
}

type MessageWrapper_S2CQueryPlayerBasic struct {
	S2CQueryPlayerBasic *S2CQueryPlayerBasic `protobuf:"bytes,1014,opt,name=s2c_query_player_basic,json=s2cQueryPlayerBasic,proto3,oneof"`
}

func (*MessageWrapper_C2SGm) isMessageWrapper_Payload() {}

func (*MessageWrapper_S2CGm) isMessageWrapper_Payload() {}

func (*MessageWrapper_C2SHeartbeat) isMessageWrapper_Payload() {}

func (*MessageWrapper_S2CHeartbeat) isMessageWrapper_Payload() {}

func (*MessageWrapper_C2SQueryLeaderboard) isMessageWrapper_Payload() {}

func (*MessageWrapper_S2CQueryLeaderboard) isMessageWrapper_Payload() {}

func (*MessageWrapper_C2SQueryServerList) isMessageWrapper_Payload() {}

func (*MessageWrapper_S2CQueryServerList) isMessageWrapper_Payload() {}

func (*MessageWrapper_C2SLogin) isMessageWrapper_Payload() {}

func (*MessageWrapper_S2CLogin) isMessageWrapper_Payload() {}

func (*MessageWrapper_C2SQueryPlayerData) isMessageWrapper_Payload() {}

func (*MessageWrapper_S2CQueryPlayerData) isMessageWrapper_Payload() {}

func (*MessageWrapper_C2SQueryPlayerBasic) isMessageWrapper_Payload() {}

func (*MessageWrapper_S2CQueryPlayerBasic) isMessageWrapper_Payload() {}

var File_message_proto protoreflect.FileDescriptor

var file_message_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x1a, 0x08, 0x67, 0x6d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xe5, 0x08, 0x0a, 0x0e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x57, 0x72, 0x61,
	0x70, 0x70, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x06, 0x63, 0x32, 0x73, 0x5f, 0x67, 0x6d, 0x18, 0xe9,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x67, 0x6d, 0x2e, 0x43, 0x32, 0x53, 0x47, 0x6d, 0x48, 0x00, 0x52, 0x05, 0x63, 0x32, 0x73,
	0x47, 0x6d, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x32, 0x63, 0x5f, 0x67, 0x6d, 0x18, 0xea, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x67,
	0x6d, 0x2e, 0x53, 0x32, 0x43, 0x47, 0x6d, 0x48, 0x00, 0x52, 0x05, 0x73, 0x32, 0x63, 0x47, 0x6d,
	0x12, 0x48, 0x0a, 0x0d, 0x63, 0x32, 0x73, 0x5f, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61,
	0x74, 0x18, 0xeb, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x2e, 0x43, 0x32,
	0x53, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x32,
	0x73, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x48, 0x0a, 0x0d, 0x73, 0x32,
	0x63, 0x5f, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x18, 0xec, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x68, 0x65,
	0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x2e, 0x53, 0x32, 0x43, 0x48, 0x65, 0x61, 0x72, 0x74,
	0x62, 0x65, 0x61, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x32, 0x63, 0x48, 0x65, 0x61, 0x72, 0x74,
	0x62, 0x65, 0x61, 0x74, 0x12, 0x60, 0x0a, 0x15, 0x63, 0x32, 0x73, 0x5f, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x5f, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18, 0xed, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x43, 0x32, 0x53, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x48,
	0x00, 0x52, 0x13, 0x63, 0x32, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x60, 0x0a, 0x15, 0x73, 0x32, 0x63, 0x5f, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x5f, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18,
	0xee, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x53, 0x32,
	0x43, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x48, 0x00, 0x52, 0x13, 0x73, 0x32, 0x63, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4c, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x58, 0x0a, 0x15, 0x63, 0x32, 0x73, 0x5f,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0xef, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2e, 0x43, 0x32, 0x53, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x12,
	0x63, 0x32, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x58, 0x0a, 0x15, 0x73, 0x32, 0x63, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0xf0, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x2e, 0x53, 0x32, 0x43, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x12, 0x73, 0x32, 0x63, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x09,
	0x63, 0x32, 0x73, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0xf1, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x2e, 0x43, 0x32, 0x53, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x63, 0x32,
	0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x38, 0x0a, 0x09, 0x73, 0x32, 0x63, 0x5f, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x18, 0xf2, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2e, 0x53, 0x32, 0x43, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x73, 0x32, 0x63, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x12, 0x58, 0x0a, 0x15, 0x63, 0x32, 0x73, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0xf3, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x2e, 0x43, 0x32, 0x53, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x12, 0x63, 0x32, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x58, 0x0a, 0x15, 0x73, 0x32,
	0x63, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0xf4, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x53, 0x32, 0x43, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00,
	0x52, 0x12, 0x73, 0x32, 0x63, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x5b, 0x0a, 0x16, 0x63, 0x32, 0x73, 0x5f, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x62, 0x61, 0x73, 0x69, 0x63, 0x18, 0xf5,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x43, 0x32, 0x53, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x73, 0x69, 0x63, 0x48, 0x00, 0x52, 0x13, 0x63, 0x32,
	0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x73, 0x69,
	0x63, 0x12, 0x5b, 0x0a, 0x16, 0x73, 0x32, 0x63, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x62, 0x61, 0x73, 0x69, 0x63, 0x18, 0xf6, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x2e, 0x53, 0x32, 0x43, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x42, 0x61, 0x73, 0x69, 0x63, 0x48, 0x00, 0x52, 0x13, 0x73, 0x32, 0x63, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x73, 0x69, 0x63, 0x42, 0x09,
	0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x0a, 0x5a, 0x08, 0x2f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_message_proto_rawDescOnce sync.Once
	file_message_proto_rawDescData = file_message_proto_rawDesc
)

func file_message_proto_rawDescGZIP() []byte {
	file_message_proto_rawDescOnce.Do(func() {
		file_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_message_proto_rawDescData)
	})
	return file_message_proto_rawDescData
}

var file_message_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_message_proto_goTypes = []any{
	(*MessageWrapper)(nil),      // 0: protocol.MessageWrapper
	(*C2SGm)(nil),               // 1: protocol.gm.C2SGm
	(*S2CGm)(nil),               // 2: protocol.gm.S2CGm
	(*C2SHeartbeat)(nil),        // 3: protocol.heartbeat.C2SHeartbeat
	(*S2CHeartbeat)(nil),        // 4: protocol.heartbeat.S2CHeartbeat
	(*C2SQueryLeaderboard)(nil), // 5: protocol.leaderboard.C2SQueryLeaderboard
	(*S2CQueryLeaderboard)(nil), // 6: protocol.leaderboard.S2CQueryLeaderboard
	(*C2SQueryServerList)(nil),  // 7: protocol.login.C2SQueryServerList
	(*S2CQueryServerList)(nil),  // 8: protocol.login.S2CQueryServerList
	(*C2SLogin)(nil),            // 9: protocol.login.C2SLogin
	(*S2CLogin)(nil),            // 10: protocol.login.S2CLogin
	(*C2SQueryPlayerData)(nil),  // 11: protocol.query.C2SQueryPlayerData
	(*S2CQueryPlayerData)(nil),  // 12: protocol.query.S2CQueryPlayerData
	(*C2SQueryPlayerBasic)(nil), // 13: protocol.query.C2SQueryPlayerBasic
	(*S2CQueryPlayerBasic)(nil), // 14: protocol.query.S2CQueryPlayerBasic
}
var file_message_proto_depIdxs = []int32{
	1,  // 0: protocol.MessageWrapper.c2s_gm:type_name -> protocol.gm.C2SGm
	2,  // 1: protocol.MessageWrapper.s2c_gm:type_name -> protocol.gm.S2CGm
	3,  // 2: protocol.MessageWrapper.c2s_heartbeat:type_name -> protocol.heartbeat.C2SHeartbeat
	4,  // 3: protocol.MessageWrapper.s2c_heartbeat:type_name -> protocol.heartbeat.S2CHeartbeat
	5,  // 4: protocol.MessageWrapper.c2s_query_leaderboard:type_name -> protocol.leaderboard.C2SQueryLeaderboard
	6,  // 5: protocol.MessageWrapper.s2c_query_leaderboard:type_name -> protocol.leaderboard.S2CQueryLeaderboard
	7,  // 6: protocol.MessageWrapper.c2s_query_server_list:type_name -> protocol.login.C2SQueryServerList
	8,  // 7: protocol.MessageWrapper.s2c_query_server_list:type_name -> protocol.login.S2CQueryServerList
	9,  // 8: protocol.MessageWrapper.c2s_login:type_name -> protocol.login.C2SLogin
	10, // 9: protocol.MessageWrapper.s2c_login:type_name -> protocol.login.S2CLogin
	11, // 10: protocol.MessageWrapper.c2s_query_player_data:type_name -> protocol.query.C2SQueryPlayerData
	12, // 11: protocol.MessageWrapper.s2c_query_player_data:type_name -> protocol.query.S2CQueryPlayerData
	13, // 12: protocol.MessageWrapper.c2s_query_player_basic:type_name -> protocol.query.C2SQueryPlayerBasic
	14, // 13: protocol.MessageWrapper.s2c_query_player_basic:type_name -> protocol.query.S2CQueryPlayerBasic
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_message_proto_init() }
func file_message_proto_init() {
	if File_message_proto != nil {
		return
	}
	file_gm_proto_init()
	file_heartbeat_proto_init()
	file_leaderboard_proto_init()
	file_login_proto_init()
	file_query_proto_init()
	file_message_proto_msgTypes[0].OneofWrappers = []any{
		(*MessageWrapper_C2SGm)(nil),
		(*MessageWrapper_S2CGm)(nil),
		(*MessageWrapper_C2SHeartbeat)(nil),
		(*MessageWrapper_S2CHeartbeat)(nil),
		(*MessageWrapper_C2SQueryLeaderboard)(nil),
		(*MessageWrapper_S2CQueryLeaderboard)(nil),
		(*MessageWrapper_C2SQueryServerList)(nil),
		(*MessageWrapper_S2CQueryServerList)(nil),
		(*MessageWrapper_C2SLogin)(nil),
		(*MessageWrapper_S2CLogin)(nil),
		(*MessageWrapper_C2SQueryPlayerData)(nil),
		(*MessageWrapper_S2CQueryPlayerData)(nil),
		(*MessageWrapper_C2SQueryPlayerBasic)(nil),
		(*MessageWrapper_S2CQueryPlayerBasic)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_message_proto_goTypes,
		DependencyIndexes: file_message_proto_depIdxs,
		MessageInfos:      file_message_proto_msgTypes,
	}.Build()
	File_message_proto = out.File
	file_message_proto_rawDesc = nil
	file_message_proto_goTypes = nil
	file_message_proto_depIdxs = nil
}
